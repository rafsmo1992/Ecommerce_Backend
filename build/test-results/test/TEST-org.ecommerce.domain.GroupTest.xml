<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.ecommerce.domain.GroupTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2023-05-03T17:31:33" hostname="DESKTOP-TRDO32M" time="0.128">
  <properties/>
  <testcase name="testAddGroup()" classname="org.ecommerce.domain.GroupTest" time="0.036"/>
  <testcase name="DeleteGroupByIdTest()" classname="org.ecommerce.domain.GroupTest" time="0.037"/>
  <testcase name="testShowAllGroups()" classname="org.ecommerce.domain.GroupTest" time="0.006"/>
  <testcase name="updateSelectedGroupTest()" classname="org.ecommerce.domain.GroupTest" time="0.028"/>
  <testcase name="getGroupByIdTest()" classname="org.ecommerce.domain.GroupTest" time="0.017"/>
  <system-out><![CDATA[2023-05-03T19:31:33.520+02:00  INFO 11016 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.ecommerce.domain.GroupTest]: GroupTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-05-03T19:31:33.521+02:00  INFO 11016 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration org.ecommerce.EcommerceApplication for test class org.ecommerce.domain.GroupTest
Hibernate: insert into `groups` (name, id) values (?, ?)
Hibernate: insert into `groups` (name, id) values (?, ?)
Hibernate: insert into `groups` (name, id) values (?, ?)
Hibernate: insert into `groups` (name, id) values (?, ?)
Hibernate: select g1_0.id,g1_0.name from `groups` g1_0
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select g1_0.id,g1_0.name from `groups` g1_0
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: delete from `groups` where id=?
Hibernate: delete from `groups` where id=?
Hibernate: delete from `groups` where id=?
Hibernate: delete from `groups` where id=?
Hibernate: insert into `groups` (name, id) values (?, ?)
Hibernate: insert into `groups` (name, id) values (?, ?)
Hibernate: insert into `groups` (name, id) values (?, ?)
Hibernate: select g1_0.id,g1_0.name,p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from `groups` g1_0 left join products p1_0 on g1_0.id=p1_0.group_id where g1_0.id=?
Hibernate: delete from `groups` where id=?
Hibernate: select g1_0.id,g1_0.name from `groups` g1_0
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select g1_0.id,g1_0.name from `groups` g1_0
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: delete from `groups` where id=?
Hibernate: delete from `groups` where id=?
Hibernate: select g1_0.id,g1_0.name from `groups` g1_0
Hibernate: select g1_0.id,g1_0.name from `groups` g1_0
Hibernate: insert into `groups` (name, id) values (?, ?)
Hibernate: insert into `groups` (name, id) values (?, ?)
Hibernate: select g1_0.id,g1_0.name,p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from `groups` g1_0 left join products p1_0 on g1_0.id=p1_0.group_id where g1_0.id=?
Hibernate: select g1_0.id,g1_0.name,p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from `groups` g1_0 left join products p1_0 on g1_0.id=p1_0.group_id where g1_0.id=?
Hibernate: update `groups` set name=? where id=?
Hibernate: select g1_0.id,g1_0.name,p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from `groups` g1_0 left join products p1_0 on g1_0.id=p1_0.group_id where g1_0.id=?
Hibernate: select g1_0.id,g1_0.name from `groups` g1_0
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select g1_0.id,g1_0.name from `groups` g1_0
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: delete from `groups` where id=?
Hibernate: delete from `groups` where id=?
Hibernate: insert into `groups` (name, id) values (?, ?)
Hibernate: insert into `groups` (name, id) values (?, ?)
Hibernate: select g1_0.id,g1_0.name,p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from `groups` g1_0 left join products p1_0 on g1_0.id=p1_0.group_id where g1_0.id=?
Group(id=11, name=Owoce, products=[])
Group(id=12, name=Warzywa, products=[])
Hibernate: select g1_0.id,g1_0.name from `groups` g1_0
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: select p1_0.group_id,p1_0.id,p1_0.name,p1_0.price from products p1_0 where p1_0.group_id=?
Hibernate: delete from `groups` where id=?
Hibernate: delete from `groups` where id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
